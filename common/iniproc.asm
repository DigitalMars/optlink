		TITLE	INIPROC - Copyright (c) SLR Systems 1994

		INCLUDE	MACROS
		INCLUDE	IO_STRUC

		PUBLIC	SCAN_SC_INI

		EXTERNDEF	OBJSTUFF:DWORD,PATHSTUFF:DWORD


		.DATA

		EXTERNDEF	INBUF:BYTE,OUTBUF:BYTE,PARSE_TABLE:BYTE,SYMBOL_TEXT:BYTE

		EXTERNDEF	CURN_FILE_LIST_GINDEX:DWORD,INPTR1:DWORD,CURN_COUNT:DWORD,ME_PTR:DWORD,CURN_INPTR:DWORD
		EXTERNDEF	ME_PATH_LEN:DWORD

		EXTERNDEF	INDNAM:NFN_STRUCT,FILNAM:NFN_STRUCT


		.CODE	STARTUP_TEXT

		EXTERNDEF	GETNST_SLASH:PROC,NEST_INDIRECT:PROC,HANDLE_EOF:PROC,_get_filename:proc
		EXTERNDEF	_do_findfirst:proc,ERR_RET:PROC,_close_findnext:proc,GET_LINE:PROC,GETNST:PROC
		EXTERNDEF	GET_KEYWORD:PROC,YYLEX_FILENAME:PROC,HANDLE_LIBS:PROC,HANDLE_STUBPATHS:PROC

		EXTERNDEF	UNREC_IN_CFG_ERR:ABS


CFG_VARS	STRUC

CFG_TEMP_BP	DB	8 DUP(?)
;CFG_NFN_BP	NFN_STRUCT<>
CFG_OUTBUF_BP	DB	512 DUP(?)

CFG_VARS	ENDS

FIX	MACRO	X

X	EQU	([EBP].CFG_VARS.(X&_BP))

	ENDM

FIX	CFG_TEMP
;FIX	CFG_NFN
FIX	CFG_OUTBUF

CFG_NFN		EQU	(INDNAM)

SCAN_SC_INI	PROC
		;
		;LOOK FOR OPTLINKS.CFG IN CURRENT DIRECTORY, ELSE IN HOME DIRECTORY
		;
		PUSH	EBP
		MOV	EAX,SIZE CFG_VARS

		MOV	EBP,ESP
		SUB	ESP,EAX

		SUB	EBP,EAX
		XOR	EAX,EAX

		PUSHM	EDI,ESI,EBX
		MOV	CURN_FILE_LIST_GINDEX,EAX

		MOV	ESI,ME_PTR
		LEA	EDI,CFG_OUTBUF		;TEMP BUFFER...

		TEST	ESI,ESI
		JZ	L9$

		MOV	BPTR [EDI],'"'
		INC	EDI
L1$:
		MOV	AL,[ESI]
		INC	ESI

		MOV	[EDI],AL
		INC	EDI

		OR	AL,AL
		JNZ	L1$
		;
		;NOW BACK UP TO FIRST \ OR :
		;
		LEA	ESI,CFG_OUTBUF+1
		MOV	ECX,EDI

		SUB	ECX,ESI			;# OF CHARS TO CHECK
		JZ	L9$
L11$:
		MOV	AL,[EDI-1]
		DEC	EDI

		DEC	ECX
		JZ	L9$

		CMP	AL,'\'
		JZ	L13$

		CMP	AL,':'
		JNZ	L11$
L13$:
		MOV	BPTR [EDI+1],'"'
		INC	EDI

		MOV	ESI,OFF MY_NAME
		INC	EDI

		LEA	ECX,CFG_OUTBUF+2	;DON'T COUNT QUOTES
		MOV	EAX,EDI

		SUB	EAX,ECX

		MOV	ME_PATH_LEN,EAX
L15$:
		MOV	AL,[ESI]
		INC	ESI

		MOV	[EDI],AL
		INC	EDI

		CMP	AL,0DH
		JNZ	L15$

		LEA	EDX,CFG_OUTBUF
		LEA	ECX,CFG_NFN

		RESS	FORCE_PATH

		MOV	EAX,OFF OBJSTUFF

		push	EDX
		push	ECX
		push	EAX
		call	_get_filename
		add	ESP,12

		LEA	EAX,CFG_NFN
		push	EAX
		CALL	_do_findfirst
		add	ESP,4
		test	EAX,EAX
		jnz	L2$
		;JNC	L2$
L9$:
		JMP	L99$

L2$:
		call	_close_findnext		;CLOSE HANDLE FOR NT
		;
		;FAKE POINTERS, ETC
		;
		MOV	EAX,CURN_INPTR
		MOV	EBX,CURN_COUNT

		PUSHM	EAX,EBX
		;
		;MARK EOF AT UNNESTING
		;
		LEA	EAX,CFG_TEMP
		MOV	ESI,OFF INBUF

		MOV	CURN_COUNT,1

		RESS	INBUF_EOF

		MOV	CURN_INPTR,EAX
		MOV	BPTR [EAX],1AH
		;
		;PUT CRLF IN CURRENT INBUF
		;
		MOV	INPTR1,ESI
		MOV	DPTR [ESI],0A0DH

		CALL	NEST_INDIRECT
		;
		;OK BOYS, WE START OFF IN OPTLINK SYNTAX MODE
		;
		SETT	DOING_CFG		;STOPS PROMPTING
		SETT	FORCE_PATH
		RESS	SUPPORT_@_INDIRECT	;IGNORE @ STUFF

		PUSH	DPTR PARSE_TABLE+']'
		MOV	BPTR PARSE_TABLE+']',CH_SEP
L5$:
		CALL	GET_LINE		;READ A LINE

		CALL	GETNST

		CMP	AL,1AH
		JZ	L8$

		CMP	AL,'['
		JNZ	L5$

;		DEC	INPTR1			;UNGET CHAR
		CALL	GET_KEYWORD

		CMP	EAX,SIZEOF ENV_STRING
		JNZ	L5$

		CALL	GETNST

;		CMP	AL,1AH			;ONLY POSSIBLE A BEGINNING OF LINE
;		JZ	L8$

		CMP	AL,']'
		JNZ	L5$

		MOV	ESI,OFF ENV_STRING
		MOV	EDI,OFF SYMBOL_TEXT
		MOV	ECX,SIZEOF ENV_STRING

		REPE	CMPSB

		JNZ	L5$
		;
		;OK, START OF ENVIRONMENT LOOP
		;I'M JUST LOOKING FOR LIB=
		;
L6$:
		CALL	GET_LINE

		CALL	GETNST

		CMP	AL,1AH
		JZ	L8$

		CMP	AL,'['
		JZ	L8$

		DEC	INPTR1
		CALL	GET_KEYWORD

		CMP	EAX,3
		JNZ	L6$

		CMP	DPTR SYMBOL_TEXT,'BIL'
		JNZ	L7$

		CALL	GETNST

		CMP	AL,'='
		JNZ	L6$
		;
		;HERE COMES GROUP OF PATHS
		;
L61$:
		;
		;WELL, WE SKIP ';', TERMINATE ON MOST ANYTHING ELSE NOT VALID IN A FILE NAME
		;
		CALL	GETNST

		CMP	AL,';'
		JZ	L61$

		CMP	AL,0DH
		JZ	L6$

		CMP	AL,0AH
		JZ	L6$

		DEC	INPTR1

		MOV	EAX,OFF PATHSTUFF
		CALL	YYLEX_FILENAME

		MOV	EAX,OFF FILNAM
		CALL	HANDLE_LIBS

		JMP	L61$

L7$:
		CMP	DPTR SYMBOL_TEXT,'NIB'
		JNZ	L6$

		CALL	GETNST

		CMP	AL,'='
		JNZ	L6$
		;
		;HERE COMES GROUP OF PATHS
		;
L71$:
		;
		;WELL, WE SKIP ';', TERMINATE ON MOST ANYTHING ELSE NOT VALID IN A FILE NAME
		;
		CALL	GETNST

		CMP	AL,';'
		JZ	L71$

		CMP	AL,0DH
		JZ	L6$

		CMP	AL,0AH
		JZ	L6$

		DEC	INPTR1

		MOV	EAX,OFF PATHSTUFF
		CALL	YYLEX_FILENAME

		MOV	EAX,OFF FILNAM
		CALL	HANDLE_STUBPATHS

		JMP	L71$


L8$:
		RESS	FORCE_PATH
		CALL	HANDLE_EOF

		PUSH	DPTR PARSE_TABLE+']'
		POPM	CURN_COUNT,CURN_INPTR

		RESS	DOING_CFG
		RESS	INBUF_EOF
L99$:
		POPM	EBX,ESI,EDI
		LEA	ESP,[EBP + SIZE CFG_VARS]
		POP	EBP
		RET

SCAN_SC_INI	ENDP


		.CONST

MY_NAME		DB	'SC.INI',0DH
ENV_STRING	DB	'ENVIRONMENT'


		END

