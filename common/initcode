.XLIST
if	fgh_win32dll

INITCODE0	MACRO

;		PUSH	OFF XCNOTIFY
;		ASSUME	FS:NOTHING

;		PUSH	DWORD PTR FS:[0]
;		MOV	FS:[0],ESP

		MOV	HOST_ESP,ESP

		ENDM


INITCODE1	MACRO

		LOCAL	OK1
		;
		;nt chicago initialization
		;
		PUSH	256		;BUFFER SIZE
		PUSH	OFF ME_TEXT

		MOV	ME_PTR,OFF ME_TEXT

		PUSH	HINSTANCE
		CALL	GetModuleFileName

		CALL	GetEnvironmentStrings

		MOV	ENVIRONMENT_BLOCK,EAX

;		BITT	_HOST_THREADED
;		JZ	OK1

;		PUSH	255
;		CALL	SetHandleCount

;		PUSH	2K
;		CALL	SetHandleCount

;		CMP	EAX,255
;		JAE	OK1

;OK1:

		ENDM

elseif	fgh_win32 AND NOT fgh_win32dll

INITCODE0	MACRO

		PUSHM	-1,0
		PUSH	OFF XCNOTIFY
		ASSUME	FS:NOTHING

		PUSH	DWORD PTR FS:[0]
		MOV	FS:[0],ESP

		PUSH	OFF _abort

		ENDM

INITCODE1	MACRO

		LOCAL	OK1,OK2

		;nt chicago initialization

		MOV	EDI,OFF BEGIN_BSS
		MOV	ECX,OFF FINISH_BSS+4

		XOR	EAX,EAX
		SUB	ECX,EDI

		SHR	ECX,2

		REP	STOSD

		CALL	GetVersion	;HIGH BIT 0 MEANS NT, HIGH TWO BITS ON
					;MEANS CHICAGO...

		OR	EAX,EAX
		JNS	DO_MT

		SHR	EAX,30

		CMP	AL,3
		JNZ	NOT_MT
DO_MT:
		SETT	_HOST_THREADED
NOT_MT:
		PUSH	256		;BUFFER SIZE
		PUSH	OFF ME_TEXT

		MOV	ME_PTR,OFF ME_TEXT

		PUSH	0	;HINSTANCE

		CALL	GetModuleFileName

		CALL	GetCommandLine		;GET PTR TO ASCII COMMAND LINE

		MOV	INPTR1,EAX
		CALL	YY_FILENAME		;SKIP MY FILENAME

		MOV	EDI,INPTR1
		XOR	EAX,EAX

		MOV	[EDI],AL
		INC	EDI

		MOV	ECX,-1
		MOV	CMDLINE_PTR,EDI

		REPNE	SCASB		;FIND END OF PARAMETERS

		SUB	ECX,-2

		NEG	ECX		;SIZE OF COMMAND LINE

		MOV	CMDLINE_LENGTH,ECX
		CALL	GetEnvironmentStrings

		MOV	ENVIRONMENT_BLOCK,EAX

		PUSH	255
		CALL	SetHandleCount		;THIS SHOULD WORK

		PUSH	2K
		CALL	SetHandleCount		;THIS MIGHT...

;		CMP	EAX,255
;		JAE	OK1

;OK1:
		PUSH	STD_OUTPUT_HANDLE	;std_output
		CALL	GetStdHandle

		MOV	_STDOUT,EAX

		ENDM

elseif fgh_dosx

INITCODE0	MACRO

		;
		;SS = STACK SEGMENT
		;BX = PSP, DI = PMODE
		;
		PUSH	OFF _abort

		MOV	STARTING_ESP,ESP	;SAVE STARTING SP
		MOV	AH,30H			;GET OS VERSION #
		INT21

		ENDM


INITCODE1	MACRO

		PUSH	EAX		;SAVE OS VERSION
		;
		;GET GP FAULT HANDLER
		;
		MOV	EAX,__psp
		MOV	ECX,__envptr
		XOR	EBX,EBX
		MOV	ENVIRONMENT_BLOCK,ECX
		
		MOV	BL,[EAX+80H]
		LEA	EAX,[EAX+81H]
		MOV	CMDLINE_LENGTH,EBX
		MOV	CMDLINE_PTR,EAX
		;
		;
		;
		POP	EAX
		MOV	DOS_VERSION,AL
		CMP	AL,3
		JAE	L2
		MOV	SHARE_ANDER,0FH
L2:
		CMP	DOS_VERSION,3
		JB	L09$
		;
		;SCAN ENVIRONMENT FOR 'ME'
		;
		MOV	EDI,ENVIRONMENT_BLOCK
		XOR	EAX,EAX
		MOV	ECX,-1
L01$:
		REPNE	SCASB		;LOOK FOR A ZERO
		SCASB			;ACTUALLY, END OF ENVIRONMENT HAS 2
		JNZ	L01$
		INC	EAX
		SCASW			;0001 BEFORE FILENAME
		JNZ	L09$
		MOV	ME_PTR,EDI
L09$:
		MOV	AH,2FH
		INT21
		MOV	OLD_DTA,EBX
		PUSH	DS
		MOV	OLD_DTA_SEG,ES
		POP	ES
		MOV	EDX,OFF DTA		;SET DTA FOR FINDFIRST
		MOV	AH,1AH			;AND FINDNEXT STUFF
		INT21

		ENDM

else

.ERR
%OUT	'UNKNOWN HOST OS'

endif

INITLISTS	MACRO	A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S
		LOCAL	L1

		IRP	XX,<A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S>
		IFB	<XX>
		EXITM
		ELSE
		MOV	EAX,OFF XX&_LIST
		CALL	INIT_LISTS
		ENDIF
		ENDM

		JMP	L1

INIT_LISTS	PROC	NEAR
		;
		;
		;
		PUSHM	EDI,ESI

		MOV	ESI,EAX
		ASSUME	ESI:PTR FILE_LISTS
		MOV	EAX,FILE_LIST_STRUCT.FILE_LIST_NFN
		TEXT_POOL_ALLOC 	;EAX ADDRESS
		MOV	EDI,EAX
		INSTALL_POINTER_GINDEX	_FILE_LIST_GARRAY

		MOV	[ESI].FILE_LAST_GINDEX,EAX
		MOV	[ESI].FILE_FIRST_GINDEX,EAX
		XOR	EAX,EAX
		MOV	ECX,FILE_LIST_STRUCT.FILE_LIST_NFN/4
		POP	ESI
		REP	STOSD
		POP	EDI
		RET

INIT_LISTS	ENDP

		ASSUME	ESI:NOTHING

L1:
		ENDM


INITSYMHASH	MACRO

		CALL	GET_NEW_LOG_BLK			;THIS TABLE USE TO HASH SYMBOLS.

		MOV	SYM_HASH_LOG,EAX
		MOV	SYM_HASH_PHYS,EAX

		MOV	ECX,SYM_HASH
		PUSH	EDI

		MOV	EDI,EAX
		XOR	EAX,EAX

		OPTI_STOSD		;ZERO OUT HASH TABLE
		POP	EDI
		ENDM


INITMULTIHASH	MACRO

		CALL	GET_NEW_LOG_BLK			;THIS TABLE USE TO HASH CLASSES, SEGMENTS, GROUPS, ETC
		PUSH	EDI
		MOV	MULTI_HASH_LOG,EAX
		ADD	SEGMENT_HASH_TABLE_PTR,EAX
		ADD	GROUP_HASH_TABLE_PTR,EAX
		ADD	CLASS_HASH_TABLE_PTR,EAX
		ADD	MODULE_HASH_TABLE_PTR,EAX
		ADD	LOCAL_HASH_TABLE_PTR,EAX

		MOV	ECX,LOCAL_HASH_TABLE_PTR
		MOV	LOCAL_HASH_TABLE_PTR_OLD,ECX

		MOV	ECX,PAGE_SIZE/4
		MOV	EDI,EAX
		XOR	EAX,EAX
		OPTI_STOSD		;ZERO OUT HASH TABLE
		POP	EDI

		ENDM


INITCODE2	MACRO

		;
if	0;fgh_os2
		PUSHM	SEG ABORT_C,OFF ABORT_C	;ROUTINE
		PUSHM	0,0			;PREV_ADDRESS
		PUSHM	0,0			;PREV_ACTION
		PUSH	2			;USE THIS ROUTINE
		PUSH	1			;CTRL-C
		CALL	DOSSETSIGHANDLER
		PUSHM	SEG ABORT_C,OFF ABORT_C	;ROUTINE
		PUSHM	0,0			;PREV_ADDRESS
		PUSHM	0,0			;PREV_ACTION
		PUSH	2			;USE THIS ROUTINE
		PUSH	4			;CTRL-BREAK
		CALL	DOSSETSIGHANDLER
elseif fgh_dosx
		;
		;SAVE CTL-C FLAG
		;
		MOV	AX,3300H		;GET & SAVE OLD CTRL-C FLAG
		INT21
		MOV	CTRL_C_FLAG,DL
		MOV	AX,3301H
		MOV	DL,1			;TURN ON ^C CHECKING...
		INT21

;		MOV	EDX,OFF ABORT_C
;		MOV	AX,2523H		;SET ^C VECTOR
;		INT21

endif

		ENDM
.LIST

