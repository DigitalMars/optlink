.XLIST
FNAME_SIZE		EQU	16

OVLINIT_STACKSIZE	EQU	100H

SECTION_FLAGS	RECORD	SECT_AUTOSECT:1,SECT_SLRPACK:1,SECT_CODEVIEW:1,SECT_IN_MEMORY:1,SECT_CACHEABLE:1,SECT_PRELOAD:1,SEXE_FILE_NUMBER:2

SECT_EXE_STRUCT 	STRUC
			;
			;STRUCTURE AS IT APPEARS IN EXE FILE AT RUN TIME
			;
if	fg_plink
_SEXE_LOAD_PARA 	DW	?		;LOAD ADDRESS FOR MODULE
_SEXE_END_PARA		DW	?		;END OF MY AREA
endif
_SEXE_FILE_PARA 	DB	3 DUP(?)	;PARA ADDRESS IN FILE
_SEXE_FLAGS		DB	?		;PRELOAD, CACHEABLE, CACHED, IN-MEMORY, COMPRESSED, RELOCS
if	fg_plink
_SEXE_PARENT_OFFSET	DW	?
_SEXE_FILE_OFFSET	DW	?		;OFFSET TO FILE
endif

SECT_EXE_STRUCT 	ENDS

SLRCODE_STRUCT		STRUC

$$SLR_FIRST_AVAIL	DW	?		;FIRST AVAILABLE PARAGRAPH
$$SLR_SECT_SIZE 	DW	?		;SIZE OF SECTION ENTRY
$$SLR_NSECTS		DW	?		;NUMBER OF SECTIONS
$$SLR_NVECTS		DW	?		;NUMBER OF VECTORS
$$SLR_RELOAD_STACK_BASE DW	?		;OFFSET IN 'SECTIONS' OF RELOAD STACK
$$SLR_RELOAD_STACK_SIZE DW	?
;$$SLR_RELOAD_TYPE	DW	?
$$SLR_MAIN		DD	?		;START ADDRESS...
$$SLR_CACHE_BLOCKS_NEEDED DW	?
$$SLR_EMS_TABLE 	DW	3 DUP(?)
$$SLR_XMS_TABLE 	DW	3 DUP(?)
$$SLR_REG_TABLE 	DW	3 DUP(?)
$$SLR_UMB_TABLE 	DW	3 DUP(?)
$$SLR_INT_NUMBER	DW	?
$$SLR_SEXE_FILE_OFFSET	DW	?		;OFFSET TO FILE POINTER

$$SLR_NEAR_SEGMENT	DW	?		;SEGMENT USED BY SMALL-MODEL OVERLAYS
$$SLR_RELOAD_JUMP	DW	?		;ADDRESS OF FAR JUMP TO RELOAD CODE...

$$SLR_DATA_AREA		DW	?
$$SLR_DATA_SECTION	DW	?
$$SLR_OVERLAY_AREA	DW	?
$$SLR_TIME_WD		DW	?
$$SLR_DATE_WD		DW	?
$$SLR_ROOT_ENVIRONMENT_LEGAL	DB	?	;USE NAME FROM ENVIRONMENT
			DB	?

$$SLR_PSP		DW	?
$$SLR_PSP_10		DW	?
$$SLR_LAST_SECTION_LOADED	DW	?
$$SLR_BUFFER		DW	?		;PARAGRAPH ADDRESS OF 'BUFFER'
$$SLR_OLD_TERMINATE	DD	?
$$SLR_OLD_INT_ADDRESS	DD	?		;INT VECTOR BEFORE WE TOOK IT...
$$SLR_TERM_FLAGS	DB	?
			DB	?
$$SLR_HEADER_DELTA	DW	?		;CHANGE IN HEADER SIZE IN PARAGRAPHS

SLRCODE_STRUCT		ENDS

CACHE_RECORD		RECORD	MINI_PERCENT:1,MAXI_PERCENT:1
.LIST
