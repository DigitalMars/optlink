.XLIST

CH_SPC		EQU	0
CH_SEP		EQU	4
CH_AT		EQU	8
CH_SEMI 	EQU	12
CH_NL		EQU	16
CH_ESC		EQU	20
CH_NEXT		EQU	24

NFN_STRUCT	STRUC

NFN_FLAGS		DB	?
NFN_TYPE		DB	?
			DW	?
NFN_TIME		DW	?
NFN_DATE		DW	?
NFN_FILE_LENGTH 	DD	?
NFN_PATHLEN		DD	?
NFN_PRIMLEN		DD	?
NFN_EXTLEN		DD	?
NFN_TOTAL_LENGTH	DD	?
NFN_TEXT		DB	NFN_TEXT_SIZE DUP(?)

NFN_STRUCT	ENDS

NFN_RECORD	RECORD	\
\
		NFN_AMBIGUOUS:1,	\
		NFN_PATH_SPECIFIED:1,	\
		NFN_EXT_SPECIFIED:1,	\
		NFN_PRIM_SPECIFIED:1,	\
		NFN_NUL:1,		\
		NFN_TIME_VALID:1

NFN_OBJ_TTYPE	EQU	0
NFN_LIB_TTYPE	EQU	1
NFN_OLD_TTYPE	EQU	2
NFN_STUB_TTYPE	EQU	3
NFN_RES_TTYPE	EQU	4
NFN_DEF_TTYPE	EQU	5
NFN_LOD_TTYPE	EQU	6

FNTBL_RECORD	RECORD	\
\
		IS_NUMERIC:1,		\
		IS_ALPHA:1,		\
		FNTBL_ILLEGAL:1,	\
		FNTBL_PATH_SEPARATOR:1,	\
		FNTBL_AMBIGUOUS:1,	\
		FNTBL_DOT:1,		\
		SYMTBL_ILLEGAL:1

FILE_LISTS	STRUC

FILE_LAST_GINDEX	DD	?		;THESE ARE GINDEXES
FILE_FIRST_GINDEX	DD	?

FILE_LISTS	ENDS

FILE_LIST_STRUCT	STRUC

FILE_LIST_NEXT_GINDEX		DD	?	;NEXT LOGICALLY
FILE_LIST_HASH_NEXT_GINDEX	DD	?	;NEXT THIS HASH
FILE_LIST_PATH_GINDEX		DD	?	;SEARCH PATH USED TO FIND THIS FILE
if	any_overlays
FILE_LIST_SECTION_GINDEX	DD	?
endif
FILE_LIST_PLTYPE	DB	?	;SECTION_ASSIGNED, LEVEL_0_
FILE_LIST_PLINK_FLAGS	DB	?	;LIB_ALLOCATE, ETC
FILE_LIST_FLAGS 	DB	?	;MOD_ADD, MOD_IGNORE, ETC
FILE_LIST_TYPE		DB	?	;MOD_TYPE, OBJ, LIB, ETC

if	fgh_inthreads
FILE_LIST_MY_NEXT_GINDEX	DD	?	;NEXT THIS THREAD (OS/2)
FILE_LIST_THREAD	DD	?	;THREAD OWNER
endif
FILE_LIST_HASH		DD	?	;HASH VALUE

FILE_LIST_NFN		NFN_STRUCT	<>

FILE_LIST_STRUCT	ENDS

FILE_LIST_PREV		EQU	FILE_LIST_MY_NEXT

		;NO_VECTOR WAS IN HERE...

PLINK_FLAGS		RECORD	LIB_ALLOCATE:1,FL_DEBUG_TYPES:1,FL_DEBUG_PUBLICS:1,FL_DEBUG_LOCALS:1, \
				FL_DEBUG_LINNUMS:1,FL_DEBUG_COVERAGES:1,FL_DEBUG_BROWSERDEFS:1,FL_DEBUG_BROWSERREFS:1

FL_FLAGS	RECORD	FLF_RANDOM:1,MOD_DELETE:1,MOD_EXTRACT:1,MOD_TBR:1,MOD_UNAMBIG:1,MOD_ADD:1,MOD_IGNORE:1

			;0	OBJ FILE
			;1	LIBRARY
			;2	OLD
			;3	STUB
			;4	RESOURCE

MYO_STRUCT		STRUC

MYO_COUNT		DD	?	;********** MUST MATCH MYI ********
MYO_HANDLE		DD	?
MYO_PTR 		DD	?
MYO_BLOCK		DD	?	;BASE ADDRESS
MYO_FILE_LENGTH		DD	?
MYO_BYTE_OFFSET 	DD	?
MYO_PHYS_ADDR		DD	?
MYO_FLUSHBUF		DCA	?
MYO_FILE_LIST_GINDEX	DD	?
MYO_BUSY		DD	?
MYO_TIME		DW	?
MYO_DATE		DW	?	;*********************************

MYO_BYTES		DD	?
MYO_DESPOT		DD	?	;DESIRED FILE POSITION
MYO_SPEC_FLAGS		DB	?
MYO_TYPE_FLAGS		DB	?
			DW	?

if	fgh_outhreads
MYO_BYTE_OFFSET2	DD	?
endif
;MYO_CURN_BUFFER 	DW	?
;MYO_STACK_SEGMENT	DW	?

MYO_STRUCT		ENDS

if	fgh_inthreads

OPEN_STRUCT	STRUC

OPENFILE_HANDLE 	DD	?		;HANDLE OF OPEN FILE
OPENFILE_FLAGS		DD	?		;NZ ON OPEN IF LIBRARY FILE

OPENFILE_NAME		DD	?		;IN MYI2_NAMS

OPENFILE_ADDR		DD	?		;CURRENT PHYSICAL ADDRESS

OPENFILE_HEADER 	DB	16 DUP(?)	;LIBRARY FILE HEADER

;OPENFILE_TIME		DW	?		;TIME STAMP ON FILE
;OPENFILE_DATE		DW	?		;DATE STAMP ON FILE

OPENFILE_PATH_GINDEX	DD	?		;IF FOUND BY SEARCHING A PATH...

OPEN_STRUCT	ENDS


INPUT_STRUCT	STRUC

INS_BLOCK	DD	?	;BLOCK ADDRESS
INS_BYTES	DD	?	;# OF BYTES READ

INS_OPENFILE	DD	?	;PTR BACK TO OPENFILE ENTRY

INPUT_STRUCT	ENDS


OUTPUT_STRUCT	STRUC

OUT_FULL_SEM	GLOBALSEM_STRUCT<>
OUT_AVAIL_SEM	GLOBALSEM_STRUCT<>

OUT_ADDR	DD	?
OUT_BUFFER	DD	?
OUT_PTR		DD	?
OUT_BYTES	DD	?

OUT_FLAGS	DB	?
		DB	?	;EVEN
		DW	?

OUTPUT_STRUCT	ENDS


MYO2_STRUCT		STRUC

MYO2_NEXT_FULL_BUFFER	DD	?
MYO2_NEXT_AVAIL_BUFFER	DD	?

MYO2_THREAD_ID		DD	?
MYO2_NUM_HANDLES 	DD	?

MYO2_RESULT		DD	?
MYO2_WRITE_FLAGS	DD	?

MYO2_TERM_SEM		GLOBALSEM_STRUCT<>

MYO2_TND_BUF		DB	16 DUP(?)

MYO2_OUT_STRUC		DB	SIZE OUTPUT_STRUCT*4 DUP(?)
MYO2_NFN		DB	SIZE NFN_STRUCT DUP(?)
MYO2_ASCIZ		DB	NFN_TEXT_SIZE+4 DUP(?)

MYO2_STRUCT		ENDS

endif

F_FLAGS 		RECORD	F_SEEK_FIRST:1,F_TRUNC_FILE:1,F_CLOSE_FILE:1,\
                                F_CLEAR_BLOCK:1,F_RELEASE_BLOCK:1,\
                                F_SET_TIME:1

MYI_STRUCT		STRUC

			;************ MUST MATCH MYO ****************

MYI_COUNT		DD	?	;BYTES LEFT IN BUFFER
MYI_HANDLE		DD	?
MYI_PTRA 		DD	?	;READ/WRITE POINTER
MYI_BLOCK		DD	?	;BASE ADDRESS OF CURRENT BUFFER
MYI_FILE_LENGTH		DD	?	;
MYI_BYTE_OFFSET 	DD	?	;ADDR AT BEGINNING OF BLOCK
MYI_PHYS_ADDR		DD	?	;CURRENT FILE POSITION (ADDR AT END OF BLK)
MYI_FILLBUF		DD	?	;FUNCTION TO FILL BUFFER
MYI_FILE_LIST_GINDEX	DD	?	;POINTS TO FN_STRUCT (MYI_NAM)
MYI_BUSY		DD	?
MYI_TIME		DW	?
MYI_DATE		DW	?	;*********************************

			;********************************************

MYI_CURRENT_TYPE	DW	?	;NON-ZERO IS LIBRARY
MYI_BUFCNT		DB	?
			DB	?

if	fgh_inthreads
MYI_LOCALS		DD	?
endif

MYI_STRUCT		ENDS


if	fgh_inthreads

MYI2_STRUCT		STRUC
			;
			;THIS STUFF IN SEPARATE SEGMENT PER THREAD
			;
MYI2_NEXT_OPEN_STRUC	DD	?	;0-3, NEXT OPENFILE STRUCTURE TO USE BY ME
MYI2_NEXT_OPEN_FILE	DD	?	;NEXT FILE TO BE 'OPENED' BY THREAD 1

MYI2_NEXT_16K_BLOCK	DD	?	;NEXT BLOCK TO BE READ BY THREAD 1
MYI2_OPREAD_THREAD_ID	DD	?
MYI2_OPREAD_THREAD_HANDLE	DD	?

MYI2_LAST_OPENFILE	DD	?
MYI2_NUM_HANDLES 	DD	?	;NUMBER OF HANDLES WHEN I STARTED THIS OPEN

MYI2_LAST_FILENAME_OPENED_GINDEX DD	?

MYI2_OBJ_LIST		FILE_LISTS<>	;FILES LINKED TO ME

MYI2_FILENAME_LIST_SEM	GLOBALSEM_STRUCT<>	;CLEARED WHEN MY FILE LIST HAS BEEN MODIFIED...

FIRST_MYI2_SEMAPHORE	EQU	<MYI2_FILENAME_LIST_SEM>

OPENFILE_AVAIL_SEM	GLOBALSEM_STRUCT<>	;IN-USE SEMAPHORE
OPENFILE_OPEN_SEM	GLOBALSEM_STRUCT<>	;FILE OPEN SEMAPHORE
OPENFILE_HEADER_SEM	GLOBALSEM_STRUCT<>	;HEADER-IS-VALID SEMAPHORE

INS_FULL_SEM	GLOBALSEM_STRUCT<>	;BLOCK HAS BEEN READ FLAG
INS_AVAIL_SEM	GLOBALSEM_STRUCT<>	;THIS ENTRY AVAILABLE FLAG

N_MYI2_SEMAPHORES	EQU	6

MYI2_RESULT		DD	?
MYI2_NEXT_FILE_BUFFER	DD	?
MYI2_OPEN_FLAGS		DD	?

MYI2_TYPE		DB	?	;NON-ZERO IS
MYI2_THREAD_NUM		DB	?	;0-3
MYI2_LAST_OPEN_ERROR	DW	?

MYI2_TEMP_RECORD	DB	40H DUP(?)

MYI2_INPUT_STRUC 	INPUT_STRUCT 4 DUP(<>)

MYI2_OPEN_STRUC		OPEN_STRUCT 4 DUP(<>)

;MYI2_ASCIZ		DB	NFN_TEXT_SIZE+4 DUP(?)

;MYI2_QFH_BUFFER		DB	64 DUP(?)

MYI2_NAMS		NFN_STRUCT 4 DUP(<>)

MYI2_STRUCT		ENDS


MYL2_STRUCT		STRUC
			;
			;THIS STUFF IN SEPARATE SEGMENT PER THREAD
			;
;MYL2_TERM_SEM		GLOBALSEM_STRUCT<>
MYL2_LIB_BLOCK_SEM	GLOBALSEM_STRUCT<>		;LIBREAD WAITS ON THIS FOR A NEW BLOCK TO BE READ
MYL2_BLOCK_READ_SEM	GLOBALSEM_STRUCT<>		;THREAD 1 WAITS ON THIS FOR A BLOCK TO BE READ

MYL2_LIBREAD_THREAD_ID	DD	?
MYL2_LIBREAD_THREAD_HANDLE	DD	?
MYL2_OPEN_FLAGS		DD	?

MYL2_DESIRED_BYTES		DD	?
MYL2_BUFFER_ADDRESS		DD	?

MYL2_FIRST_REQUEST_LIB_GINDEX	DD	?
MYL2_LAST_REQUEST_LIB_GINDEX	DD	?

MYL2_CURRENT_LIB_GINDEX	DD	?			;FOR ERROR MESSAGES...

MYL2_ASCIZ		DB	NFN_TEXT_SIZE+4 DUP(?)

MYL2_NAM		DB	SIZE NFN_STRUCT DUP(?)

MYL2_STRUCT		ENDS

endif

OUTFILE_STRUCT	STRUC

_OF_FILE_LIST_GINDEX	DD	?	;PTR TO FILE_LIST ENTRY
_OF_NEXT_HASH_GINDEX	DD	?	;NEXT ITEM HASH ORDER

_OF_FINAL_HIGH_WATER	DD	?
_OF_PHYS_ADDR		DD	?	;CURRENT PHYSICAL POINTER

_OF_NEXT_OUTFILE_ORDER	DD	?	;NEXT OUTFILE IN INDEX ORDER
_OF_OUTFILE_NUMBER	DD	?	;FOR OVERLAYS, OUTPUT FILE #

_OF_SECTIONS		DD	?	;# OF SECTIONS USING THIS FILE

_OF_FLAGS		DB	?	;FILE CREATED,
			DB	?
			DW	?

_OF_HANDLE		DD	?	;FILE HANDLE IF OPEN

OUTFILE_STRUCT	ENDS

OF_RECORD	RECORD	OF_CREATED:1,OF_CLOSED:1,OF_TRUNCATED:1,OF_ROOT:1

.LIST
