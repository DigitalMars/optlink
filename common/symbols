.XLIST

NSYM_UNDEFINED		EQU	0	;NOT ANYTHING, IN NO LIST, UNREFERENCED
NSYM_ASEG		EQU	2	;SEGMENT 'AT' KIND, IN PUBLIC LIST
NSYM_RELOC		EQU	4	;NORMAL RELOCATABLE, IN PUBLIC LIST
NSYM_COMM_NEAR		EQU	6	;NORMAL, IN COMMUNAL LIST
NSYM_COMM_FAR		EQU	8	;NORMAL, IN COMMUNAL LIST, FAR
NSYM_COMM_HUGE		EQU	10	;HUGE COMMUNAL, IN COMMUNAL LIST
NSYM_CONST		EQU	12	;X EQU 5, IN PUBLIC LIST
NSYM_LIBRARY		EQU	14	;NOT DEFINED OR REFERENCED, IN A LIB, NO LIST
NSYM_IMPORT		EQU	16	;SYMBOL IS IMPORTED
NSYM_PROMISED		EQU	18	;PROMISED BY A DEFINE, DOSSEG, LIB
NSYM_EXTERNAL		EQU	20	;UNDEFINED, REFERENCED, IN EXTRN LIST
NSYM_WEAK_EXTRN		EQU	22	;THIS IS IN THE REFERENCED 'WEAK EXTRNS' LIST...
NSYM_POS_WEAK		EQU	24	;THIS REFERENCED HERE AS WEAK EXTRN, NOT IN LIST YET
NSYM_LIBRARY_LIST	EQU	26	;UNDEFINED, REFERENCED, IN A LIB LIST
NSYM__IMP__UNREF	EQU	28	;__imp_ SYMBOL, NOT REFERENCED
NSYM_ALIASED		EQU	30	;HAS AN ALIAS ASSIGNED, REFERENCED
NSYM_COMDAT		EQU	32	;COMDAT SYMBOL
NSYM_WEAK_DEFINED	EQU	34	;REFERENCED WEAK EXTRN, MY DEFAULT HAS BEEN DEFINED, OR AT LEAST 'REFERENCED'
NSYM_WEAK_UNREF		EQU	36	;UNREFERENCED WEAK, IN NO LIST
NSYM_ALIASED_UNREF	EQU	38	;UNREFERENCED ALIAS, IN NO LIST
NSYM_POS_LAZY		EQU	40	;MAKING THIS A LAZY
NSYM_LAZY		EQU	42	;REFERENCED LAZY, IN LIST
NSYM_LAZY_UNREF		EQU	44	;UNREFERENCED LAZY, IN NO LIST
NSYM_ALIAS_DEFINED	EQU	46	;REFERENCED ALIAS, MY DEFAULT HAS BEEN REFERENCED
NSYM_LAZY_DEFINED	EQU	48	;REFERENCED LAZY, MY DEFAULT HAS BEEN REFERENCED
NSYM_NCOMM_UNREF	EQU	50	;UNREFERENCED NEAR COMMUNAL, IN NO LIST
NSYM_FCOMM_UNREF	EQU	52	;UNREFERENCED FAR COMMUNAL, IN NO LIST
NSYM_HCOMM_UNREF	EQU	54	;UNREFERENCED HUGE COMMUNAL, IN NO LIST
NSYM__IMP__		EQU	56
NSYM_UNDECORATED	EQU	58	;USED BY DEFINE_EXPORTS

NSYM_SIZE		EQU	60	;LENGTH OF THIS LIST

NSYM_ANDER		EQU	63

SYMBOL_STRUCT	STRUC

_S_NSYM_TYPE		DB	?	;UNDEFINED, ASEG, RELOC, PROMISED, ETC **
_S_REF_FLAGS		DB	?	;REFERENCED FLAG..., FIARQQ FLAG	**
_S_CV_TYPE3		DW	?

_S_NEXT_HASH_GINDEX	DD	?	;NEXT SYMBOL IN HASH	;LATER IT IS PARAGRAPH OR OS2_SELECTOR #

_S_NEXT_SYM_GINDEX	DD	?	;FORWARD LINK	-	USED ALWAYS
_S_PREV_SYM_GINDEX	DD	?	;BACKWARDS LINK -	LATER IT IS OS2_FLAGS

_S_MOD_GINDEX		DD	?	;REFERENCING MODULE, MODULE IN LIBRARY, DEFINING MODULE GINDEX
_S_LIB_MODULE dd ?
_S_SEG_GINDEX		DD	?	;DEFINING LIBRARY, INITIALLY SEGMOD, LATER SEGMENT?

_S_OFFSET		DD	?	;OFFSET FROM SEGMOD, LATER OFFSET FROM FRAME - OR TOTAL OFFSET
_S_CD_SEGMOD_GINDEX	EQU	_S_OFFSET	;SEGMOD I WILL USE
_S_ALIAS_SUBSTITUTE_GINDEX	EQU	_S_OFFSET	;SYMBOL TO USE FOR THIS ONE

_S_LAST_XREF		DD	?

if	any_overlays
_S_SECTION_GINDEX	EQU	_S_NEXT_HASH_GINDEX	;LOWEST COMMON SECTION REFERENCED FROM
					;LATER IT BECOMES VECTOR #
_S_PLTYPE		DB	?		;PLTYPES RECORD
_S_PLINK_FLAGS		DB	?
_S_VECTOR		EQU	_S_GROUP_GINDEX	;VECTOR INDEX #
endif

_S_NAME_TEXT 	DD	?
_S_FLOAT_TYPE	EQU	<_S_NAME_TEXT+8>

SYMBOL_STRUCT	ENDS


_S_N_CPP_MATCHES	EQU	(_S_MOD_GINDEX)
_S_N_NCPP_MATCHES	EQU	(_S_SEG_GINDEX)
_S_LAST_CPP_MATCH	EQU	(_S_OFFSET)
_S_LAST_NCPP_MATCH	EQU	(_S_LAST_XREF)


_S_OS2_NUMBER	EQU	(_S_NEXT_HASH_GINDEX)	;OR PARAGRAPH
_S_OS2_FLAGS	EQU	(_S_PREV_SYM_GINDEX)

		;
		;LIBRARY
		;
_S_LIB_GINDEX	EQU	_S_SEG_GINDEX		;DEFINING LIBRARY
;_S_LIB_MODULE	EQU	_S_MOD_GINDEX		;MODULE # IN LIBRARY

		;
		;ALIAS
		;
		;
		;WEAK EXTRN
		;
_S_WEAK_DEFAULT_GINDEX	EQU	(_S_OFFSET)		;DEFAULT EXTERNAL TO USE IF DEFINED

		;
		;LAZY EXTRN
		;
_S_LAZY_DEFAULT_GINDEX	EQU	(_S_OFFSET)		;SYMBOL TO USE IF WE CANNOT FIND ME

_S__IMP__DEFAULT_GINDEX	EQU	(_S_OFFSET)


PLINK_SYMBOL_REC	RECORD	\
		VECTOR_ALWAYS:1,\
		VECTOR_NEVER:1,\
		VECTOR_TRACK:1,\
		VECTOR_YES:1,\			;SYMBOL IS VECTORED
		MERGE_PUBLIC:1,\
		MERGE_PRIVATE:1,\
		DEBUG_GLOBAL:1


S_S	RECORD	S_DATA_REF:1,S_USE_GROUP:1,S_WEAK_AGAIN:1,S_SPACES:1,S_REFERENCED:1,S_FLOAT_SYM:1,S_HARD_REF:1,S_SOFT_REF:1


S_NO_CODEVIEW	EQU	<S_SOFT_REF>

UNDECO_EXACT		EQU	<S_SOFT_REF>
UNDECO_REFERENCED_1	EQU	<S_HARD_REF>

_S_REF_MOD_GINDEX	EQU	_S_MOD_GINDEX		;FIRST MODULE REFERENCING THIS (FOR ERROR_UNDEFINED)

;_S_LAST_XREF	EQU	_S_OFFSET			;LINKED LIST OF REFERENCING MODULES
_S_DEFINING_MOD	EQU	_S_MOD_GINDEX			;MODULE # IF DEFINED NORMALLY (USED DURING XREF OUTPUT)

_S_IMP_NOFFSET	EQU	(_S_OFFSET)			;OFFSET TO NAME TEXT
_S_IMP_MODULE	EQU	_S_SEG_GINDEX			;IMPORT MODULE NUMBER (INDEX INTO NEXEHEADER) (AND IMPMOD_GARRAY)
;_S_IMP_FLAGS	EQU	(_S_OFFSET.LW)			;0=BYNAME, 1=ORDINAL
_S_IMP_IMPNAME_GINDEX	EQU	_S_PREV_SYM_GINDEX	;IF IMPORTED BY NAME OR HINT
_S_IMP_ORDINAL	EQU	_S_PREV_SYM_GINDEX		;IF IMPORTED BY ORDINAL
;_S_IMP_IMPMOD_GINDEX	EQU	(_S_OFFSET.HW)		;MODULE (IN IMPNAME TABLE)
_S_IMP_NEXT_GINDEX	EQU	_S_NEXT_SYM_GINDEX	;LIST FOR SCANNING IMPORTS
_S_IMP_JREF_INDEX	EQU	(_S_OFFSET)		;INDEX INTO IMPCODE SEGMENT

S_IMP_ORDINAL	EQU	<S_USE_GROUP>


_COMM_NSYM_TYPE		EQU	<_S_NSYM_TYPE>
_COMM_REF_FLAGS		EQU	<_S_REF_FLAGS>

_COMM_NEXT_HASH_GINDEX	EQU	<_S_NEXT_HASH_GINDEX>

_COMM_NEXT_SYM_GINDEX	EQU	<_S_NEXT_SYM_GINDEX>
_COMM_PREV_SYM_GINDEX	EQU	<_S_PREV_SYM_GINDEX>

_COMM_MOD_GINDEX	EQU	<_S_MOD_GINDEX>
_COMM_SIZE_A		EQU	<_S_SEG_GINDEX>

_COMM_SIZE_B		EQU	<_S_OFFSET>

if	fg_td

TDBG_SYMBOL_STRUCT	STRUC

_TDBG_S_FLAGS		DB	?	;DEBUG TYPE COMPRESSED.
_TDBG_S_BP_FLAGS	DB	?	;TDBG STUFF
_TDBG_S_SRC_MOD		DW	?	;SOURCE FILE DEFINING THIS GUY
_TDBG_S_LINNUM		DW	?	;LINE NUMBER...
_TDBG_S_TID		DW	?	;TURBO TYPE INDEX

TDBG_SYMBOL_STRUCT	ENDS

endif

.LIST

